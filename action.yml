name: 'PropReports Auto-Exporter'
description: 'Automatically export trading data from PropReports with daily, weekly, and monthly summaries'
author: 'jefrnc'
branding:
  icon: 'trending-up'
  color: 'green'

inputs:
  propreports-domain:
    description: 'Your PropReports domain (e.g., zim.propreports.com)'
    required: true
  propreports-user:
    description: 'Your PropReports username'
    required: true
  propreports-pass:
    description: 'Your PropReports password'
    required: true
  export-path:
    description: 'Path where exports will be saved'
    required: false
    default: 'exports'
  commit-exports:
    description: 'Whether to commit exported files'
    required: false
    default: 'true'
  generate-weekly:
    description: 'Generate weekly summary (auto on Sundays)'
    required: false
    default: 'auto'
  generate-monthly:
    description: 'Generate monthly summary (auto on last day)'
    required: false
    default: 'auto'
  reprocess-days:
    description: 'Number of previous days to reprocess (for delayed trades)'
    required: false
    default: '2'
  obfuscate-account:
    description: 'Obfuscate account names for privacy'
    required: false
    default: 'true'
  full-reprocess:
    description: 'Generate all weekly/monthly summaries when reprocessing'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      shell: bash
      run: |
        pip install requests beautifulsoup4 lxml numpy
    
    - name: Download exporter scripts
      shell: bash
      run: |
        # Download the necessary scripts from the action repository
        wget -q https://raw.githubusercontent.com/jefrnc/propreports-auto-exporter/main/src/propreports_exporter.py
        wget -q https://raw.githubusercontent.com/jefrnc/propreports-auto-exporter/main/src/daily_exporter.py
        wget -q https://raw.githubusercontent.com/jefrnc/propreports-auto-exporter/main/src/advanced_exporter.py
        wget -q https://raw.githubusercontent.com/jefrnc/propreports-auto-exporter/main/src/weekly_summary.py
        wget -q https://raw.githubusercontent.com/jefrnc/propreports-auto-exporter/main/src/monthly_summary.py
        wget -q https://raw.githubusercontent.com/jefrnc/propreports-auto-exporter/main/src/full_reprocess.py
    
    - name: Run daily export with reprocessing
      shell: bash
      env:
        PROPREPORTS_DOMAIN: ${{ inputs.propreports-domain }}
        PROPREPORTS_USER: ${{ inputs.propreports-user }}
        PROPREPORTS_PASS: ${{ inputs.propreports-pass }}
        EXPORT_OUTPUT_DIR: ${{ inputs.export-path }}
        OBFUSCATE_ACCOUNT: ${{ inputs.obfuscate-account }}
      run: |
        echo "üìÖ Running daily export for $(date +%Y-%m-%d)..."
        echo "‚ôªÔ∏è Will also reprocess last ${{ inputs.reprocess-days }} days for delayed trades..."
        
        # Export today
        python daily_exporter.py
        
        # Reprocess previous days if configured
        if [ "${{ inputs.reprocess-days }}" -gt "0" ]; then
          if [ "${{ inputs.full-reprocess }}" = "true" ]; then
            echo "üîÑ Full reprocessing last ${{ inputs.reprocess-days }} days (with summaries)..."
            python full_reprocess.py ${{ inputs.reprocess-days }}
          else
            echo "üîÑ Reprocessing last ${{ inputs.reprocess-days }} days..."
            python advanced_exporter.py reprocess ${{ inputs.reprocess-days }}
          fi
        fi
    
    - name: Generate weekly summary
      shell: bash
      env:
        EXPORT_OUTPUT_DIR: ${{ inputs.export-path }}
      run: |
        # Check if we should generate weekly summary
        GENERATE_WEEKLY="${{ inputs.generate-weekly }}"
        DAY_OF_WEEK=$(date +%u)  # 1=Monday, 7=Sunday
        
        if [ "$GENERATE_WEEKLY" = "true" ]; then
          echo "üìä Force generating weekly summary..."
          python weekly_summary.py
        elif [ "$GENERATE_WEEKLY" = "auto" ] && [ "$DAY_OF_WEEK" = "7" -o "$DAY_OF_WEEK" = "1" ]; then
          echo "üìä Auto-generating weekly summary (weekend)..."
          python weekly_summary.py
        fi
    
    - name: Generate monthly summary  
      shell: bash
      env:
        EXPORT_OUTPUT_DIR: ${{ inputs.export-path }}
      run: |
        # Check if we should generate monthly summary
        GENERATE_MONTHLY="${{ inputs.generate-monthly }}"
        DAY_OF_MONTH=$(date +%d)
        
        if [ "$GENERATE_MONTHLY" = "true" ]; then
          echo "üìà Force generating monthly summary..."
          python monthly_summary.py
        elif [ "$GENERATE_MONTHLY" = "auto" ] && [ "$DAY_OF_MONTH" -le "03" ]; then
          echo "üìà Auto-generating monthly summary (start of month)..."
          python monthly_summary.py
        fi
    
    - name: Commit and push exports
      if: ${{ inputs.commit-exports == 'true' }}
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "PropReports Export Action"
        git add ${{ inputs.export-path }}/
        git diff --quiet && git diff --staged --quiet || (git commit -m "üìä PropReports export - $(date +%Y-%m-%d)" && git push)