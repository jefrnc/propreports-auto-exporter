name: Weekly Trading Coaching Report

on:
  schedule:
    # Run every Monday at 10:00 AM UTC
    - cron: '0 10 * * 1'
  workflow_dispatch:
    inputs:
      year:
        description: 'Year (default: current year)'
        required: false
        type: string
      week:
        description: 'Week number (default: auto-detect)'
        required: false
        type: string
      force_enable:
        description: 'Force enable coaching (ignore feature flag)'
        required: false
        type: boolean
        default: false

env:
  PROPREPORTS_DOMAIN: ${{ secrets.PROPREPORTS_DOMAIN }}
  PROPREPORTS_USER: ${{ secrets.PROPREPORTS_USER }}
  PROPREPORTS_PASS: ${{ secrets.PROPREPORTS_PASS }}
  EXPORT_OUTPUT_DIR: "exports"
  OBFUSCATE_ACCOUNT: "true"
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  ENABLE_COACHING: ${{ secrets.ENABLE_COACHING || 'false' }}

jobs:
  weekly-coaching:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Check if coaching is enabled
        id: check_coaching
        run: |
          if [[ "${{ env.ENABLE_COACHING }}" == "true" || "${{ github.event.inputs.force_enable }}" == "true" ]]; then
            echo "enabled=true" >> $GITHUB_OUTPUT
            echo "Coaching is enabled"
          else
            echo "enabled=false" >> $GITHUB_OUTPUT
            echo "Coaching is disabled. Set ENABLE_COACHING secret to 'true' to enable."
          fi

      - name: Check if weekly data exists
        if: steps.check_coaching.outputs.enabled == 'true'
        id: check_data
        run: |
          cd src
          # Check if we have weekly data for the previous week
          CURRENT_WEEK=$(date -d "last monday" +%V)
          CURRENT_YEAR=$(date -d "last monday" +%Y)
          
          if [[ -f "../exports/weekly/${CURRENT_YEAR}-W${CURRENT_WEEK}.json" ]]; then
            echo "data_exists=true" >> $GITHUB_OUTPUT
            echo "Weekly data exists for ${CURRENT_YEAR}-W${CURRENT_WEEK}"
          else
            echo "data_exists=false" >> $GITHUB_OUTPUT
            echo "No weekly data found for ${CURRENT_YEAR}-W${CURRENT_WEEK}"
            echo "Weekly coaching skipped - no data available"
          fi

      - name: Generate weekly coaching report
        if: steps.check_coaching.outputs.enabled == 'true' && steps.check_data.outputs.data_exists == 'true'
        run: |
          cd src
          if [[ -n "${{ github.event.inputs.year }}" && -n "${{ github.event.inputs.week }}" ]]; then
            python trading_coach.py weekly --year ${{ github.event.inputs.year }} --week ${{ github.event.inputs.week }}
          else
            python trading_coach.py weekly --auto
          fi

      - name: Update dashboard with coaching data
        if: steps.check_coaching.outputs.enabled == 'true' && steps.check_data.outputs.data_exists == 'true'
        run: |
          cd src
          python generate_dashboard_data.py

      - name: Commit and push coaching reports
        if: steps.check_coaching.outputs.enabled == 'true' && steps.check_data.outputs.data_exists == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add exports/coaching/
          git add docs/
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸ¤– Weekly coaching report - Week $(date -d 'last monday' +%V)/$(date -d 'last monday' +%Y)"
            git push
          fi

      - name: Coaching disabled notification
        if: steps.check_coaching.outputs.enabled == 'false'
        run: |
          echo "::notice::Weekly coaching is disabled. To enable, set the ENABLE_COACHING repository secret to 'true'."
          
      - name: No data notification
        if: steps.check_coaching.outputs.enabled == 'true' && steps.check_data.outputs.data_exists == 'false'
        run: |
          echo "::notice::Weekly coaching skipped - no weekly data available for analysis."